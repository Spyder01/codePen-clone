{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","display","useState","open","setOpen","className","style","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","Gif","bool","gifs","Math","floor","random","length","Displayer","App","html","setHtml","css","setCss","js","setJs","xml","setXml","Css","setCssT","Js","setJsT","gif","setGif","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","class","for","name","checked","Jss","src","frameBorder","allowFullScreen","title","sandbox","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.841c6ad9.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Editor(props) {\n  const {\n    language,\n    displayName,\n    value,\n    onChange,\n    display\n  } = props\n  const [open, setOpen] = useState(true)\n\n  const Displayer = ()=>{\n    if(display) return \"flex\"\n    else return \"none\"\n  }\n\n  function handleChange(editor, data, value) {\n    onChange(value)\n  }\n\n  return (\n    <div className={`editor-container ${open ? '' : 'collapsed'}`} style={{display:Displayer()}}>\n      <div className=\"editor-title\">\n        {displayName}\n        <button\n          type=\"button\"\n          className=\"expand-collapse-btn\"\n          onClick={() => setOpen(prevOpen => !prevOpen)}\n        >\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\n        </button>\n      </div>\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          theme: 'material',\n          lineNumbers: true\n        }}\n      />\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nconst PREFIX = 'codepen-clone-'\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key\n\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n    if (jsonValue != null) return JSON.parse(jsonValue)\n\n    if (typeof initialValue === 'function') {\n      return initialValue()\n    } else {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}\n","import React, { useState, useEffect } from 'react';\nimport Editor from './Editor'\nimport Select from 'react-select';\nimport useLocalStorage from '../hooks/useLocalStorage'\n\n\nconst Gif = (bool)=> {\n\n  const gifs = [\n    \"M8o1MOwcwsWOmueqN4\",\n    \"h3QZAnmQ6bHMI\",\n    \"UsHgX0Ze5NBxlTORSr\",\n    \"3ohuAepsZINiMLU3Ek\",\n    \"14udF3WUwwGMaA\",\n    \"iwVHUKnyvZKEg\",\n    \"wO4cyxpDbtHji\",\n    \"f8fir5ylD8fY4KX5NN\",\n    \"spHCUbRqG4cjS\",\n    \"VInghBdi0Ym9XJghC0\"\n\n]\nif(bool)\nreturn gifs[Math.floor(Math.random()*gifs.length)]\nelse return gifs[0]\n\n}\n\n\nconst Displayer = (display)=>{\n  if(display) return \"flex\"\n  else return \"none\"\n}\n\nconst App = ()=> {\n  const [html, setHtml] = useLocalStorage('html', '')\n  const [css, setCss] = useLocalStorage('css', '')\n  const [js, setJs] = useLocalStorage('js', '')\n  const [xml, setXml] = useState(true)\n  const [Css, setCssT] = useState(true)\n  const [Js, setJsT] = useState(true)\n  const [gif, setGif] = useState(false)\n  const [srcDoc, setSrcDoc] = useState('')\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `)\n    }, 250)\n\n    return () => clearTimeout(timeout)\n  }, [html, css, js])\n\n  return (\n    <>\n      <nav className='navbar'>\n        <div class='title' onClick={()=>setGif(gif=>!gif)}>\n          SpyCode\n        </div>\n        <div className='selected'>\n          <label value='xml' for='xml'>\n            HTML\n         <input name='xml' type='checkbox' checked={xml} onChange={()=>{\n           return setXml(xml=>!xml)\n         }}/>\n         </label>\n         <label value='CSS' >\n            CSS\n         <input name='css' type='checkbox' checked={Css} onChange={()=>{\n           return setCssT(Css=>!Css)\n         }}/>\n         </label>\n         <label value='js'>\n            JS\n         <input name='js' type='checkbox' checked={Js} onChange={()=>{\n           return setJsT(Jss=>!Jss)\n         }}/>\n         </label>\n        </div>\n      </nav>\n      \n      <div className=\"pane top-pane\">\n      <div className='giphy' style={{display:Displayer(gif)}} ><iframe src={`https://giphy.com/embed/${Gif(gif)}`} frameBorder=\"0\" class=\"giphy\" allowFullScreen></iframe></div>\n      <div className='editor' style={{display:Displayer(!gif)}}>\n        <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n          display={xml}\n        />\n        <Editor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n          display={Css}\n        />\n        <Editor\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setJs}\n          display={Js}\n        />\n        </div>\n\n      </div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </>\n  )\n}\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}